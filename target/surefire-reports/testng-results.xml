<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="2" failed="15" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-03T00:25:20 MSK" name="Surefire suite" finished-at="2024-10-03T00:25:21 MSK" duration-ms="684">
    <groups>
    </groups>
    <test started-at="2024-10-03T00:25:20 MSK" name="Surefire test" finished-at="2024-10-03T00:25:21 MSK" duration-ms="684">
      <class name="ru.mai.lessons.rpks.impl.ConfigReaderTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="testNegativeLoadConfig" description="Ожидаем ошибку при указании некорректного имени файла" data-provider="invalidFilename" finished-at="2024-10-03T00:25:21 MSK" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ConfigReaderTest.testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292] should have thrown an exception of type class ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ConfigReaderTest.testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292] should have thrown an exception of type class ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:860)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:718)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeLoadConfig -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="testNegativeLoadConfig" description="Ожидаем ошибку при указании некорректного имени файла" data-provider="invalidFilename" finished-at="2024-10-03T00:25:21 MSK" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method ConfigReaderTest.testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292] should have thrown an exception of type class ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method ConfigReaderTest.testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292] should have thrown an exception of type class ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:860)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:718)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeLoadConfig -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveLoadConfig()[pri:0, instance:ru.mai.lessons.rpks.impl.ConfigReaderTest@7b9a4292]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveLoadConfig" description="Успешное считывание содержимого конфигурационного файла" finished-at="2024-10-03T00:25:21 MSK" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.ConfigReaderTest.testPositiveLoadConfig(ConfigReaderTest.java:56)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveLoadConfig -->
      </class> <!-- ru.mai.lessons.rpks.impl.ConfigReaderTest -->
      <class name="ru.mai.lessons.rpks.impl.BracketsDetectorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:20 MSK" name="setUp" finished-at="2024-10-03T00:25:20 MSK" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:20 MSK" name="setUp" finished-at="2024-10-03T00:25:20 MSK" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeCheckAllBracketsRules(java.util.List,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:20 MSK" name="testNegativeCheckAllBracketsRules" description="Неуспешная проверка расстановки разных вариаций скобок. Ожидаем ошибки." data-provider="invalidContentForConfig" finished-at="2024-10-03T00:25:20 MSK" duration-ms="182" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[[some(one{1!|value|2?}jar))none], |abc(d)[e]f{g}, abc(d)[e]f{g}|, |abc(d[e]f{g}|, |abcd)[e]f{g}|, |abc(d)[e]f{g}|, |abc(d)e]f{g}|, |abc(d)[ef{g}|, |abc(d)[e]fg}|, |abc(d)[e]f{g|]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ErrorLocationPoint{lineNumber=1, symbolNumber=27}, ErrorLocationPoint{lineNumber=2, symbolNumber=1}, ErrorLocationPoint{lineNumber=3, symbolNumber=14}, ErrorLocationPoint{lineNumber=4, symbolNumber=5}, ErrorLocationPoint{lineNumber=5, symbolNumber=6}, ErrorLocationPoint{lineNumber=7, symbolNumber=9}, ErrorLocationPoint{lineNumber=8, symbolNumber=8}, ErrorLocationPoint{lineNumber=9, symbolNumber=13}, ErrorLocationPoint{lineNumber=10, symbolNumber=12}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testNegativeCheckAllBracketsRules(BracketsDetectorTest.java:245)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeCheckAllBracketsRules -->
        <test-method signature="testNegativeCheckAllBracketsRules(java.util.List,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:20 MSK" name="testNegativeCheckAllBracketsRules" description="Неуспешная проверка расстановки разных вариаций скобок. Ожидаем ошибки." data-provider="invalidContentForConfig" finished-at="2024-10-03T00:25:20 MSK" duration-ms="18" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[[some(one{1!|value|2?}jar))none]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ErrorLocationPoint{lineNumber=1, symbolNumber=27}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testNegativeCheckAllBracketsRules(BracketsDetectorTest.java:245)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeCheckAllBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeCheckMagicBracketsRules()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testNegativeCheckMagicBracketsRules" description="Неуспешная проверка расстановки указанных в конфиге скобок. Ожидаем ошибки." finished-at="2024-10-03T00:25:21 MSK" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testNegativeCheckMagicBracketsRules(BracketsDetectorTest.java:278)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeCheckMagicBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveCheckAllBracketsRules()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckAllBracketsRules" description="Успешная проверка расстановки всех возможных скобок. Не должны найти ошибки." finished-at="2024-10-03T00:25:21 MSK" duration-ms="41" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckAllBracketsRules(BracketsDetectorTest.java:79)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckAllBracketsRules -->
        <test-method signature="testPositiveCheckMagicBracketsRules()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckMagicBracketsRules" description="Успешная проверка расстановки указанных в конфиге скобок. Не должны найти ошибки." finished-at="2024-10-03T00:25:21 MSK" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckMagicBracketsRules(BracketsDetectorTest.java:259)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckMagicBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveCheckSomeBracketsRules(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckSomeBracketsRules" description="Успешная проверка расстановки разных вариаций скобок. Не должны найти ошибки." data-provider="validContentForConfig" finished-at="2024-10-03T00:25:21 MSK" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
  "bracket": [
    {
      "left": "[",
      "right": "]"
    }
  ]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[some(exe{1!|value|2?}jar)none], {| [[ (( |{ }| )) ]] |}, , [(|}], a[b-b]c, ab-b)c, a{b-bc, []}{|)(, {
  "bracket": [
    {
      "left": "[",
      "right": "]"
    },
    {
      "left": "{",
      "right": "}"
    },
    {
      "left": "(",
      "right": ")"
    },
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckSomeBracketsRules(BracketsDetectorTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckSomeBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveCheckSomeBracketsRules(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckSomeBracketsRules" description="Успешная проверка расстановки разных вариаций скобок. Не должны найти ошибки." data-provider="validContentForConfig" finished-at="2024-10-03T00:25:21 MSK" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
  "bracket": [
    {
      "left": "(",
      "right": ")"
    }
  ]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[some(exe{1!|value|2?}jar)none], {| [[ (( |{ }| )) ]] |}, , ([|}), a(b-b)c, ab-b]c, a{b-bc, ()}{|][, {
  "bracket": [
    {
      "left": "[",
      "right": "]"
    },
    {
      "left": "{",
      "right": "}"
    },
    {
      "left": "(",
      "right": ")"
    },
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckSomeBracketsRules(BracketsDetectorTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckSomeBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveCheckSomeBracketsRules(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckSomeBracketsRules" description="Успешная проверка расстановки разных вариаций скобок. Не должны найти ошибки." data-provider="validContentForConfig" finished-at="2024-10-03T00:25:21 MSK" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
  "bracket": [
    {
      "left": "{",
      "right": "}"
    }
  ]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[some(exe{1!|value|2?}jar)none], {| [[ (( |{ }| )) ]] |}, , {[|)}, a{b-b}c, ab-b]c, a(b-bc, {})(|][, {
  "bracket": [
    {
      "left": "[",
      "right": "]"
    },
    {
      "left": "{",
      "right": "}"
    },
    {
      "left": "(",
      "right": ")"
    },
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckSomeBracketsRules(BracketsDetectorTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckSomeBracketsRules -->
        <test-method signature="testPositiveCheckSomeBracketsRules(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckSomeBracketsRules" description="Успешная проверка расстановки разных вариаций скобок. Не должны найти ошибки." data-provider="validContentForConfig" finished-at="2024-10-03T00:25:21 MSK" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
  "bracket": [
    {
      "left": "[",
      "right": "]"
    },
    {
      "left": "{",
      "right": "}"
    },
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[some(one{1!|value|2?}jar))none]]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckSomeBracketsRules(BracketsDetectorTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckSomeBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveCheckSomeBracketsRules(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveCheckSomeBracketsRules" description="Успешная проверка расстановки разных вариаций скобок. Не должны найти ошибки." data-provider="validContentForConfig" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
  "bracket": [
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[[some(exe{1!|value|2?}jar)none], {| [[ (( |{ }| )) ]] |}, , |[})|, a|b-b|c, ab-b]c, a(b-bc, ||)(}{][, {
  "bracket": [
    {
      "left": "[",
      "right": "]"
    },
    {
      "left": "{",
      "right": "}"
    },
    {
      "left": "(",
      "right": ")"
    },
    {
      "left": "|",
      "right": "|"
    }
  ]
}
]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.assertNotNull(Assert.java:1484)
at org.testng.Assert.assertNotNull(Assert.java:1468)
at ru.mai.lessons.rpks.impl.BracketsDetectorTest.testPositiveCheckSomeBracketsRules(BracketsDetectorTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveCheckSomeBracketsRules -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.BracketsDetectorTest@1ea9f6af]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- ru.mai.lessons.rpks.impl.BracketsDetectorTest -->
      <class name="ru.mai.lessons.rpks.impl.FileReaderTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="testNegativeLoadConfig" description="Ожидаем ошибку при указании некорректного имени файла" data-provider="invalidFilename" finished-at="2024-10-03T00:25:21 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException">
            <message>
              <![CDATA[detected empty file or invalid file]]>
            </message>
            <full-stacktrace>
              <![CDATA[ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException: detected empty file or invalid file
at ru.mai.lessons.rpks.impl.FileReader.loadContent(FileReader.java:17)
at ru.mai.lessons.rpks.impl.FileReaderTest.testNegativeLoadConfig(FileReaderTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeLoadConfig -->
        <test-method signature="testNegativeLoadConfig(java.lang.String)[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="testNegativeLoadConfig" description="Ожидаем ошибку при указании некорректного имени файла" data-provider="invalidFilename" finished-at="2024-10-03T00:25:21 MSK" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException">
            <message>
              <![CDATA[detected empty file or invalid file]]>
            </message>
            <full-stacktrace>
              <![CDATA[ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException: detected empty file or invalid file
at ru.mai.lessons.rpks.impl.FileReader.loadContent(FileReader.java:17)
at ru.mai.lessons.rpks.impl.FileReaderTest.testNegativeLoadConfig(FileReaderTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- ru.mai.lessons.rpks.exception.FilenameShouldNotBeEmptyException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeLoadConfig -->
        <test-method signature="testPositiveLoadContent(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveLoadContent" description="Успешное считывание содержимого файла" data-provider="validCases" finished-at="2024-10-03T00:25:21 MSK" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\single_line.txt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Hello World!]]]>
              </value>
            </param>
          </params>
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Illegal char <:> at index 20: src/test/resources/C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\single_line.txt]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Illegal char <:> at index 20: src/test/resources/C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\single_line.txt
at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:204)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:175)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:231)
at java.base/java.nio.file.Path.of(Path.java:148)
at java.base/java.nio.file.Paths.get(Paths.java:69)
at ru.mai.lessons.rpks.impl.FileReader.loadContent(FileReader.java:21)
at ru.mai.lessons.rpks.impl.FileReaderTest.testPositiveLoadContent(FileReaderTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveLoadContent -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="setUp" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositiveLoadContent(java.lang.String,java.util.List)[pri:0, instance:ru.mai.lessons.rpks.impl.FileReaderTest@4a94ee4]" started-at="2024-10-03T00:25:21 MSK" name="testPositiveLoadContent" description="Успешное считывание содержимого файла" data-provider="validCases" finished-at="2024-10-03T00:25:21 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\multiple_lines.txt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Hello, World!]]]>
              </value>
            </param>
          </params>
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Illegal char <:> at index 20: src/test/resources/C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\multiple_lines.txt]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Illegal char <:> at index 20: src/test/resources/C:\Users\79257\IdeaProjects\JavaServiceBrackets\target\test-classes\multiple_lines.txt
at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:204)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:175)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:231)
at java.base/java.nio.file.Path.of(Path.java:148)
at java.base/java.nio.file.Paths.get(Paths.java:69)
at ru.mai.lessons.rpks.impl.FileReader.loadContent(FileReader.java:21)
at ru.mai.lessons.rpks.impl.FileReaderTest.testPositiveLoadContent(FileReaderTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveLoadContent -->
      </class> <!-- ru.mai.lessons.rpks.impl.FileReaderTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
